INFO:objex.OBJEX_OT_export.progress_report_print:   (  0.0001 sec |   0.0000 sec) Objex Export path: '/data2/Games/N64/Mods/triforce-percent/actor/BossRunningMan/BossRunningManObj.objex'
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0048 sec |   0.0038 sec) Finished writing geometry of 'Skeleton'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating RunningMan, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0327 sec |   0.0273 sec) Finished writing geometry of 'RunningMan'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FistL, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0383 sec |   0.0050 sec) Finished writing geometry of 'FistL'.
DEBUG:objex.ObjexWriter.write_object: Skipped triangulating FistR, mesh only has triangles
INFO:objex.OBJEX_OT_export.progress_report_print:         (  0.0437 sec |   0.0047 sec) Finished writing geometry of 'FistR'.
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0446 sec |   0.0440 sec) Finished exporting geometry, now exporting materials
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Skin' name_q='"Skin"' material=<bpy_struct, Material("Skin") at 0x7f1a8dc87088, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d244208, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d236e08, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d236408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6d244008, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6d236c08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6d235808, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d235a08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6d235808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a6d235208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d235a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a6d235208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d236408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a6d235c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6d236c08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a6d236608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d236e08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a6d236608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6d244008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a6d242a08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6d244208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a6d242a08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['object_mmTex_000930.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['object_mmTex_000930.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['object_mmTex_000930.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['object_mmTex_000930.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['object_mmTex_000930.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Hands' name_q='"Hands"' material=<bpy_struct, Material("Hands") at 0x7f1a8a2e0508, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92844e08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92842a08, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92842008, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a92844c08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a92842808, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a92836408, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92836608, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a92836408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a92835e08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92836608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a92835e08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92842008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a92836808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a92842808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a92842208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92842a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a92842208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a92844c08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a92844608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92844e08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a92844608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['object_mmTex_001030.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['object_mmTex_001030.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['object_mmTex_001030.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['object_mmTex_001030.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['object_mmTex_001030.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Hair' name_q='"Hair"' material=<bpy_struct, Material("Hair") at 0x7f1a8a2e1a08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec46c08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec45808, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec38e08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6ec46a08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6ec45608, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6ec38208, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec38408, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6ec38208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a6ec37c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec38408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a6ec37c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec38e08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a6ec38608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6ec45608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a6ec45008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec45808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a6ec45008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6ec46a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a6ec46408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6ec46c08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a6ec46408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['object_mmTex_000970.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['object_mmTex_000970.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['object_mmTex_000970.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['object_mmTex_000970.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['object_mmTex_000970.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='HairLine' name_q='"HairLine"' material=<bpy_struct, Material("HairLine") at 0x7f1a8a3d4d88, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90044e08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90043a08, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90043008, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a90044c08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a90043808, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a90037408, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90037608, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a90037408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a90036e08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90037608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a90036e08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90043008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a90037808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a90043808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a90043208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90043a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a90043208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a90044c08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a90044608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a90044e08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a90044608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['object_mmTex_0009F0.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['object_mmTex_0009F0.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['object_mmTex_0009F0.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['object_mmTex_0009F0.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['object_mmTex_0009F0.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Eyes' name_q='"Eyes"' material=<bpy_struct, Material("Eyes") at 0x7f1a8a3d6588, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94253208, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94245e08, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94245408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a94253008, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a94245c08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a94244808, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94244a08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a94244808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a94244208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94244a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a94244208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94245408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a94244c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a94245c08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a94245608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94245e08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a94245608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a94253008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a94251a08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a94253208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a94251a08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['object_mmTex_000A30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['object_mmTex_000A30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['object_mmTex_000A30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['object_mmTex_000A30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['object_mmTex_000A30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Eyebrows' name_q='"Eyebrows"' material=<bpy_struct, Material("Eyebrows") at 0x7f1a8aefa908, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c24f808, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c24e408, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c242a08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6c24f608, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6c24e208, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a6c240e08, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c242008, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6c240e08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a6c240808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c242008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a6c240808, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c242a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a6c242208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6c24e208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a6c242c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c24e408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a6c242c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a6c24f608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a6c24f008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a6c24f808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a6c24f008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['object_mmTex_000B30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['object_mmTex_000B30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['object_mmTex_000B30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['object_mmTex_000B30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['object_mmTex_000B30.ci8.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='Mouth' name_q='"Mouth"' material=<bpy_struct, Material("Mouth") at 0x7f1a8aefbe08, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa5dc08, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa5b808, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa50e08, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a8fa5da08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a8fa5b608, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a8fa50208, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa50408, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a8fa50208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a8fa4fc08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa50408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a8fa4fc08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa50e08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a8fa50608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a8fa5b608, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a8fa5b008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa5b808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a8fa5b008, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a8fa5da08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a8fa5d408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8fa5dc08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a8fa5d408, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['Mouth.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['Mouth.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['Mouth.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['Mouth.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['Mouth.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06001130' name_q='"mtl_06001130"' material=<bpy_struct, Material("mtl_06001130") at 0x7f1ab48b2608, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a926a7208, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a9269ae08, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a9269a408, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a926a7008, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a9269ac08, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a92699808, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92699a08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a92699808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a92699208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a92699a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a92699208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a9269a408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a92699c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a9269ac08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a9269a608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a9269ae08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a9269a608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a926a7008, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a926a6a08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a926a7208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a926a6a08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['bnd.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['bnd.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['bnd.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['bnd.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['bnd.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': True, 'uv_wrap_v': True, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
TRACE:objex.export_objex_mtl.write_mtl: Writing name='mtl_06001330' name_q='"mtl_06001330"' material=<bpy_struct, Material("mtl_06001330") at 0x7f1ab48b3988, evaluated> face_img=None
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: per-flag used sockets: {'G_ACMUX_SHADE': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8a272208, evaluated>, 'G_ACMUX_TEXEL0': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8a24aa08, evaluated>, 'G_ACMUX_ENVIRONMENT': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8a23c808, evaluated>, 'G_CCMUX_SHADE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a8a251c08, evaluated>, 'G_CCMUX_TEXEL0': <bpy_struct, NodeSocketColor("Color") at 0x7f1a8a24a408, evaluated>, 'G_CCMUX_PRIMITIVE': <bpy_struct, NodeSocketColor("Color") at 0x7f1a8c4d9808, evaluated>, 'G_CCMUX_PRIMITIVE_ALPHA': <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8c4d9a08, evaluated>}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a8c4d9808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a8c4d9208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting primitiveA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8c4d9a08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_PrimColor") at 0x7f1a8c4d9208, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting environmentA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8a23c808, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_EnvColor") at 0x7f1a8c4d9c08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0RGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a8a24a408, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a8a23cc08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting texel0A from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8a24aa08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Texel0") at 0x7f1a8a23cc08, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeRGB from <bpy_struct, NodeSocketColor("Color") at 0x7f1a8a251c08, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a8a251608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: getting shadeA from <bpy_struct, NodeSocketColor("Alpha") at 0x7f1a8a272208, evaluated> (socket node: <bpy_struct, ShaderNodeGroup("OBJEX_Shade") at 0x7f1a8a251608, evaluated>)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: data before merge: {'primitiveRGB': bpy.data.node_groups['Shader Nodetree']...default_value, 'primitiveA': 1.0, 'environmentA': 1.0, 'texel0RGB': {'image': bpy.data.images['bunnyLogo.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'texel0A': {'image': bpy.data.images['bunnyLogo.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}, 'shadeRGB': {'type': 'normals'}, 'shadeA': {'type': 'normals'}}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged primitiveRGB bpy.data.node_groups['Shader Nodetree']...default_value and primitiveA 1.0 into primitive (1.0, 1.0, 1.0, 1.0)
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged texel0RGB {'image': bpy.data.images['bunnyLogo.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} and texel0A {'image': bpy.data.images['bunnyLogo.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0} into texel0 {'image': bpy.data.images['bunnyLogo.png'], 'uv_scale_u': 0, 'uv_scale_v': 0, 'uv_wrap_u': False, 'uv_wrap_v': False, 'uv_mirror_u': False, 'uv_mirror_v': False, 'uv_layer': False, 'uv_map': '', 'texgen': False, 'texgen_linear': False, 'uv_scale_u_main': 1.0, 'uv_scale_v_main': 1.0}
DEBUG:objex.ObjexMaterialNodeTreeExplorer.buildCombinerInputs: Merged shadeRGB {'type': 'normals'} and shadeA {'type': 'normals'} into shade {'type': 'normals'}
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.0708 sec |   0.0702 sec) Finished exporting materials, now exporting skeletons/animations
INFO:objex.ObjexWriter.write: now exporting skeletons
INFO:objex.ObjexWriter.write:  ... and animations
INFO:objex.anim.order_bones: Skipping non-deform bone FalseRoot (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Hand.L.IK (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Hand.R.IK (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone head.IK (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Leg.L.IK (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Leg.R.IK (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Hand.L.Pole (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Hand.R.Pole (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Leg.L.Pole (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone Leg.R.Pole (intended for eg IK bones)
INFO:objex.anim.order_bones: Skipping non-deform bone limb_00.001 (intended for eg IK bones)
INFO:objex.OBJEX_OT_export.progress_report_print:     (  0.4117 sec |   0.4110 sec) Objex Export Finished
